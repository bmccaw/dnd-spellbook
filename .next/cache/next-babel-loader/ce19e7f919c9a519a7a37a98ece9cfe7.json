{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\brend\\\\coding\\\\Projects\\\\dnd-spellfinder\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Hero from '../components/Hero'; // import Nav from '../components/Navbar';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(Hero, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.results.map(function (spell) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, spell.name);\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch('http://dnd5eapi.co/api/spells/');\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            console.log(\"Showing data fetched. Count: \".concat(data.count));\n            return _context.abrupt(\"return\", {\n              results: data.results\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\brend\\coding\\Projects\\dnd-spellfinder\\pages\\index.js"],"names":["fetch","Hero","Index","props","results","map","spell","name","getInitialProps","context","id","query","res","json","data","console","log","count"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,WACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,KAAK,CAACC,IADR,CADuB;AAAA,GAAvB,CADF,CAHF,CADa;AAAA,CAAd;;AAcEL,KAAK,CAACM,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,EADe,GACRD,OAAO,CAACE,KADA,CACfD,EADe;AAAA;AAAA,mBAELV,KAAK,CAAE,gCAAF,CAFA;;AAAA;AAEjBY,YAAAA,GAFiB;AAAA;AAAA,mBAGJA,GAAG,CAACC,IAAJ,EAHI;;AAAA;AAGjBC,YAAAA,IAHiB;AAKvBC,YAAAA,OAAO,CAACC,GAAR,wCAA4CF,IAAI,CAACG,KAAjD;AALuB,6CAOhB;AACNb,cAAAA,OAAO,EAAEU,IAAI,CAACV;AADR,aAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeF,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport Hero from '../components/Hero';\n// import Nav from '../components/Navbar';\n\nconst Index = (props) => (\n\t<div>\n\t  {/* <Nav /> */}\n\t  <Hero /> \n\t  <ul>\n\t\t  {props.results.map(spell => (\n\t\t\t  <li>\n\t\t\t\t  {spell.name}\n\t\t\t  </li>\n\t\t  ))}\n\t  </ul>\n\t</div>\n  );\n\n  Index.getInitialProps = async (context) => {\n\t  const { id } = context.query;\n\t  const res = await fetch ('http://dnd5eapi.co/api/spells/');\n\t  const data = await res.json();\n\t  \n\t  console.log(`Showing data fetched. Count: ${data.count}`);\n\n\t  return {\n\t\t  results: data.results\n\t  };\n  };\n  \n  export default Index;"]},"metadata":{},"sourceType":"module"}