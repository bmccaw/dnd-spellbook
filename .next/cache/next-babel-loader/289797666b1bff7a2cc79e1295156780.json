{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"C:\\\\Users\\\\brend\\\\coding\\\\Projects\\\\dnd-spellfinder\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\n\nconst Index = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, \"D&D Spellbook\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.results));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://dnd5eapi.co/api/spells');\n  const data = await res.json();\n  console.log(`Showing data fetched. Count: ${data.count}`);\n  return {\n    results: _Object$keys(data).map(i => data[i])\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\brend\\coding\\Projects\\dnd-spellfinder\\pages\\index.js"],"names":["fetch","Index","props","results","getInitialProps","res","data","json","console","log","count","map","i"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEA,KAAK,CAACC,OADR,CAFF,CADD;;AASEF,KAAK,CAACG,eAAN,GAAwB,kBAAiB;AACxC,QAAMC,GAAG,GAAG,MAAML,KAAK,CAAE,+BAAF,CAAvB;AACA,QAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BH,IAAI,CAACI,KAAM,EAAvD;AAEA,SAAO;AACNP,IAAAA,OAAO,EAAE,aAAYG,IAAZ,EAAkBK,GAAlB,CAAsBC,CAAC,IAAIN,IAAI,CAACM,CAAD,CAA/B;AADH,GAAP;AAGA,CATD;;AAWA,eAAeX,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst Index = (props) => (\n\t<div>\n\t  <h1>D&D Spellbook</h1>\n\t  <ul>\n\t\t  {props.results}\n\t  </ul>\n\t</div>\n  );\n\n  Index.getInitialProps = async function() {\n\t  const res = await fetch ('http://dnd5eapi.co/api/spells');\n\t  const data = await res.json();\n\n\t  console.log(`Showing data fetched. Count: ${data.count}`);\n\n\t  return {\n\t\t  results: Object.keys(data).map(i => data[i])\n\t  };\n  };\n  \n  export default Index;"]},"metadata":{},"sourceType":"module"}